test_optional_which_covers_next_terminal_at_start - 'aa'
1 ===================================

****

--------------------------------------
[1] GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(0/0-[RP(0/<GOAL>,0,SR)]) -- WIDTH['a']() --> State(1/0-[RP(-1/<EMPTY>,0,ER)]) {0}
  Transition: State(0/0-[RP(0/<GOAL>,0,SR)]) -- WIDTH['a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}
For GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}, taking: Transition: State(0/0-[RP(0/<GOAL>,0,SR)]) -- WIDTH['a']() --> State(1/0-[RP(-1/<EMPTY>,0,ER)]) {0}
For GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}, taking: Transition: State(0/0-[RP(0/<GOAL>,0,SR)]) -- WIDTH['a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}

****

--------------------------------------
[2] GNI{state=State(1/0-[RP(-1/<EMPTY>,0,ER)]),lhs=[],sp=0,np=0,nc=0} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(1/0-[RP(-1/<EMPTY>,0,ER)]) -- HEIGHT['a']('a') --> State(3/0-[RP(0/oa,E,ER)]) {0-0}
For GNI{state=State(1/0-[RP(-1/<EMPTY>,0,ER)]),lhs=[],sp=0,np=0,nc=0}, taking: Transition: State(1/0-[RP(-1/<EMPTY>,0,ER)]) -- HEIGHT['a']('a') --> State(3/0-[RP(0/oa,E,ER)]) {0-0}
Dropped: GNI{state=State(1/0-[RP(-1/<EMPTY>,0,ER)]),lhs=[],sp=0,np=0,nc=0}
--------------------------------------
[2] GNI{state=State(3/0-[RP(0/oa,E,ER)]),lhs=['a'],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(3/0-[RP(0/oa,E,ER)]) -- HEIGHT['a'](<EOT>) --> State(4/0-[RP(0/S,0,1)]) {0-0}
For GNI{state=State(3/0-[RP(0/oa,E,ER)]),lhs=['a'],sp=0,np=0,nc=1}, taking: Transition: State(3/0-[RP(0/oa,E,ER)]) -- HEIGHT['a'](<EOT>) --> State(4/0-[RP(0/S,0,1)]) {0-0}
Dropped: GNI{state=State(3/0-[RP(0/oa,E,ER)]),lhs=['a'],sp=0,np=0,nc=1}
--------------------------------------
[2] GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(4/0-[RP(0/S,0,1)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}
For GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1}, taking: Transition: State(4/0-[RP(0/S,0,1)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}
===================================

0 --------------------------------------
[1] GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0} -2-> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT['a'](<RT>) --> State(6/0-[RP(0/as,I,MI)]) {0-4}
For GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0}, taking: Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT['a'](<RT>) --> State(6/0-[RP(0/as,I,MI)]) {0-4}
Choices:
  Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT['a']('a') --> State(7/0-[RP(0/oa,I,ER)]) {0-0}
For GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0}, taking: Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT['a']('a') --> State(7/0-[RP(0/oa,I,ER)]) {0-0}
Dropped: GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=0,np=1,nc=0}

1 --------------------------------------
[2] GNI{state=State(6/0-[RP(0/as,I,MI)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(7/0-[RP(0/oa,I,ER)]),lhs=['a'],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(6/0-[RP(0/as,I,MI)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {4}
For GNI{state=State(6/0-[RP(0/as,I,MI)]),lhs=[<EOT>],sp=0,np=1,nc=1}, taking: Transition: State(6/0-[RP(0/as,I,MI)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {4}
2 --------------------------------------
[2] GNI{state=State(7/0-[RP(0/oa,I,ER)]),lhs=['a'],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0} --> GNI{state=State(6/0-[RP(0/as,I,MI)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(7/0-[RP(0/oa,I,ER)]) -- HEIGHT['a'](<RT>) --> State(4/0-[RP(0/S,0,1)]) {0-0}
For GNI{state=State(7/0-[RP(0/oa,I,ER)]),lhs=['a'],sp=0,np=1,nc=1}, taking: Transition: State(7/0-[RP(0/oa,I,ER)]) -- HEIGHT['a'](<RT>) --> State(4/0-[RP(0/S,0,1)]) {0-0}
Dropped: GNI{state=State(7/0-[RP(0/oa,I,ER)]),lhs=['a'],sp=0,np=1,nc=1}
3 --------------------------------------
[2] GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0} --> GNI{state=State(6/0-[RP(0/as,I,MI)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(4/0-[RP(0/S,0,1)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}
For GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1}, taking: Transition: State(4/0-[RP(0/S,0,1)]) -- WIDTH[<RT>, 'a']() --> State(2/0-[RP(0/'a',0,ER)]) {0}
===================================
0 --------------------------------------
[1] GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0} -2-> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT[<RT>](<RT>) --> State(5/0-[RP(0/as,I,ER)]) {0-4}
For GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0}, taking: Transition: State(2/0-[RP(0/'a',0,ER)]) -- HEIGHT[<RT>](<RT>) --> State(5/0-[RP(0/as,I,ER)]) {0-4}
Choices:
  Transition: State(2/0-[RP(0/'a',0,ER)]) -- GRAFT[<RT>]() --> State(5/0-[RP(0/as,I,ER)]) {4-6}
For GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0}, taking: Transition: State(2/0-[RP(0/'a',0,ER)]) -- GRAFT[<RT>]() --> State(5/0-[RP(0/as,I,ER)]) {4-6}
Dropped: GNI{state=State(2/0-[RP(0/'a',0,ER)]),lhs=[],sp=1,np=2,nc=0}
Dropped: GNI{state=State(6/0-[RP(0/as,I,MI)]),lhs=[<EOT>],sp=0,np=1,nc=1}=true
1 --------------------------------------
[2] GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=1,np=2,nc=1} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(5/0-[RP(0/as,I,ER)]) -- GRAFT[<RT>]() --> State(8/0-[RP(0/S,0,ER)]) {0-4}
For GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2}, taking: Transition: State(5/0-[RP(0/as,I,ER)]) -- GRAFT[<RT>]() --> State(8/0-[RP(0/S,0,ER)]) {0-4}
Dropped: GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2}
Dropped: GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=0,nc=1}=true
2 --------------------------------------
[2] GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=1,np=2,nc=1} --> GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
GNI{state=State(8/0-[RP(0/S,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(5/0-[RP(0/as,I,ER)]) -- GRAFT[<RT>]() --> State(8/0-[RP(0/S,0,ER)]) {0-4}
For GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=1,np=2,nc=1}, taking: Transition: State(5/0-[RP(0/as,I,ER)]) -- GRAFT[<RT>]() --> State(8/0-[RP(0/S,0,ER)]) {0-4}
Dropped: GNI{state=State(5/0-[RP(0/as,I,ER)]),lhs=[<EOT>],sp=1,np=2,nc=1}
Dropped: GNI{state=State(4/0-[RP(0/S,0,1)]),lhs=[<EOT>],sp=0,np=1,nc=1}=true
3 --------------------------------------
[1] GNI{state=State(8/0-[RP(0/S,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2} --> GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}
Choices:
  Transition: State(8/0-[RP(0/S,0,ER)]) -- GOAL[<EOT>]() --> State(9/0-[RP(0/<GOAL>,0,ER)]) {0-0}
For GNI{state=State(8/0-[RP(0/S,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2}, taking: Transition: State(8/0-[RP(0/S,0,ER)]) -- GOAL[<EOT>]() --> State(9/0-[RP(0/<GOAL>,0,ER)]) {0-0}
Dropped: GNI{state=State(8/0-[RP(0/S,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=2}
Dropped: GNI{state=State(0/0-[RP(0/<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,nc=0}=true
4 --------------------------------------
[1] GNI{state=State(9/0-[RP(0/<GOAL>,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=1}
Dropped: GNI{state=State(9/0-[RP(0/<GOAL>,0,ER)]),lhs=[<EOT>],sp=0,np=2,nc=1}
Duration: 51.376584ms

<Click to see difference>

org.junit.ComparisonFailure: expected:<S {
  oa { ['a' }
  as { 'a'] }
}> but was:<S {
  oa { [<EMPTY> }
  as {
    'a'
    'a'
 ] }
}>
	at org.junit.Assert.assertEquals(Assert.java:117)
	at kotlin.test.junit.JUnitAsserter.assertEquals(JUnitSupport.kt:32)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals(Assertions.kt:63)
	at kotlin.test.AssertionsKt.assertEquals(Unknown Source)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals$default(Assertions.kt:62)
	at kotlin.test.AssertionsKt.assertEquals$default(Unknown Source)
	at net.akehurst.language.parser.leftcorner.test_LeftCornerParserAbstract.testWithOptions(test_LeftCornerParserAbstract.kt:107)
	at net.akehurst.language.parser.leftcorner.test_LeftCornerParserAbstract.test2(test_LeftCornerParserAbstract.kt:72)
	at net.akehurst.language.parser.leftcorner.test_LeftCornerParserAbstract.test(test_LeftCornerParserAbstract.kt:52)
	at net.akehurst.language.parser.leftcorner.test_LeftCornerParserAbstract.test(test_LeftCornerParserAbstract.kt:41)
	at net.akehurst.language.parser.leftcorner.multi.test_optional_which_covers_next_terminal_at_start.aa(test_optional_which_covers_next_terminal_at_start.kt:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

