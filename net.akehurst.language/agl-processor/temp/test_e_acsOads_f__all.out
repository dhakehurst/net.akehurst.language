test_e_acsOads_f - 'eaf'
1 ===================================
0 --------------------------------------
[1] GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(0/0-[RP(<GOAL>,0,SR)]) -- WIDTH['a']() --> State(1/0-[RP('e',0,ER)]) {[RP(<GOAL>,0,SR)]}
For GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}, taking: Transition: State(0/0-[RP(<GOAL>,0,SR)]) -- WIDTH['a']() --> State(1/0-[RP('e',0,ER)]) {[RP(<GOAL>,0,SR)]}
2 ===================================
0 --------------------------------------
[1] GNI{state=State(1/0-[RP('e',0,ER)]),lhs=[],sp=0,np=1,len=0} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(1/0-[RP('e',0,ER)]) -- HEIGHT['a'](<EOT>) --> State(2/0-[RP(S,0,1)]) {[RP(<GOAL>,0,SR)]}
For GNI{state=State(1/0-[RP('e',0,ER)]),lhs=[],sp=0,np=1,len=0}, taking: Transition: State(1/0-[RP('e',0,ER)]) -- HEIGHT['a'](<EOT>) --> State(2/0-[RP(S,0,1)]) {[RP(<GOAL>,0,SR)]}
Dropped: GNI{state=State(1/0-[RP('e',0,ER)]),lhs=[],sp=0,np=1,len=0}
1 --------------------------------------
[1] GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(2/0-[RP(S,0,1)]) -- WIDTH['c', 'd', 'f']() --> State(3/0-[RP('a',0,ER)]) {[RP(<GOAL>,0,SR)]}
For GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1}, taking: Transition: State(2/0-[RP(S,0,1)]) -- WIDTH['c', 'd', 'f']() --> State(3/0-[RP('a',0,ER)]) {[RP(<GOAL>,0,SR)]}
4 ===================================
0 --------------------------------------
[1] GNI{state=State(3/0-[RP('a',0,ER)]),lhs=[],sp=1,np=2,len=0} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(3/0-[RP('a',0,ER)]) -- HEIGHT['f', 'd']('f', 'd') --> State(4/0-[RP(ads,0,ER)]) {[RP(S,0,1)]}
  Transition: State(3/0-[RP('a',0,ER)]) -- HEIGHT['f', 'c']('f', 'c') --> State(5/0-[RP(acs,0,ER)]) {[RP(S,0,1)]}
For GNI{state=State(3/0-[RP('a',0,ER)]),lhs=[],sp=1,np=2,len=0}, taking: Transition: State(3/0-[RP('a',0,ER)]) -- HEIGHT['f', 'd']('f', 'd') --> State(4/0-[RP(ads,0,ER)]) {[RP(S,0,1)]}
For GNI{state=State(3/0-[RP('a',0,ER)]),lhs=[],sp=1,np=2,len=0}, taking: Transition: State(3/0-[RP('a',0,ER)]) -- HEIGHT['f', 'c']('f', 'c') --> State(5/0-[RP(acs,0,ER)]) {[RP(S,0,1)]}
Dropped: GNI{state=State(3/0-[RP('a',0,ER)]),lhs=[],sp=1,np=2,len=0}
1 --------------------------------------
[2] GNI{state=State(5/0-[RP(acs,0,ER)]),lhs=['f', 'c'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(5/0-[RP(acs,0,ER)]) -- HEIGHT['f']('f') --> State(6/0-[RP(ambig,0,ER)]) {[RP(S,0,1)]}
  Transition: State(5/0-[RP(acs,0,ER)]) -- HEIGHT['c']('f', 'c') --> State(7/0-[RP(acs1,0,1)]) {[RP(S,0,1)]}
For GNI{state=State(5/0-[RP(acs,0,ER)]),lhs=['f', 'c'],sp=1,np=2,len=1}, taking: Transition: State(5/0-[RP(acs,0,ER)]) -- HEIGHT['f']('f') --> State(6/0-[RP(ambig,0,ER)]) {[RP(S,0,1)]}
Dropped: GNI{state=State(5/0-[RP(acs,0,ER)]),lhs=['f', 'c'],sp=1,np=2,len=1}
2 --------------------------------------
[2] GNI{state=State(6/0-[RP(ambig,0,ER)]),lhs=['f'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(6/0-[RP(ambig,0,ER)]) -- GRAFT['f']() --> State(8/0-[RP(S,0,2)]) {[RP(S,0,1)]}
For GNI{state=State(6/0-[RP(ambig,0,ER)]),lhs=['f'],sp=1,np=2,len=1}, taking: Transition: State(6/0-[RP(ambig,0,ER)]) -- GRAFT['f']() --> State(8/0-[RP(S,0,2)]) {[RP(S,0,1)]}
Dropped: GNI{state=State(6/0-[RP(ambig,0,ER)]),lhs=['f'],sp=1,np=2,len=1}
3 --------------------------------------
[2] GNI{state=State(8/0-[RP(S,0,2)]),lhs=[<EOT>],sp=0,np=2,len=2} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(8/0-[RP(S,0,2)]) -- WIDTH[<RT>]() --> State(9/0-[RP('f',0,ER)]) {[RP(<GOAL>,0,SR)]}
For GNI{state=State(8/0-[RP(S,0,2)]),lhs=[<EOT>],sp=0,np=2,len=2}, taking: Transition: State(8/0-[RP(S,0,2)]) -- WIDTH[<RT>]() --> State(9/0-[RP('f',0,ER)]) {[RP(<GOAL>,0,SR)]}
4 --------------------------------------
[2] GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
GNI{state=State(9/0-[RP('f',0,ER)]),lhs=[],sp=2,np=3,len=0} --> GNI{state=State(8/0-[RP(S,0,2)]),lhs=[<EOT>],sp=0,np=2,len=2} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(4/0-[RP(ads,0,ER)]) -- HEIGHT['f']('f') --> State(10/0-[RP(ambig,1,ER)]) {[RP(S,0,1)]}
  Transition: State(4/0-[RP(ads,0,ER)]) -- HEIGHT['d']('f', 'd') --> State(11/0-[RP(ads1,0,1)]) {[RP(S,0,1)]}
For GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1}, taking: Transition: State(4/0-[RP(ads,0,ER)]) -- HEIGHT['f']('f') --> State(10/0-[RP(ambig,1,ER)]) {[RP(S,0,1)]}
Dropped: GNI{state=State(4/0-[RP(ads,0,ER)]),lhs=['f', 'd'],sp=1,np=2,len=1}
5 --------------------------------------
[2] GNI{state=State(10/0-[RP(ambig,1,ER)]),lhs=['f'],sp=1,np=2,len=1} --> GNI{state=State(2/0-[RP(S,0,1)]),lhs=[<EOT>],sp=0,np=1,len=1} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
GNI{state=State(9/0-[RP('f',0,ER)]),lhs=[],sp=2,np=3,len=0} --> GNI{state=State(8/0-[RP(S,0,2)]),lhs=[<EOT>],sp=0,np=2,len=2} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(10/0-[RP(ambig,1,ER)]) -- GRAFT['f']() --> State(8/0-[RP(S,0,2)]) {[RP(S,0,1)]}
For GNI{state=State(10/0-[RP(ambig,1,ER)]),lhs=['f'],sp=1,np=2,len=1}, taking: Transition: State(10/0-[RP(ambig,1,ER)]) -- GRAFT['f']() --> State(8/0-[RP(S,0,2)]) {[RP(S,0,1)]}
Dropped: GNI{state=State(10/0-[RP(ambig,1,ER)]),lhs=['f'],sp=1,np=2,len=1}
10 ===================================
0 --------------------------------------
[1] GNI{state=State(9/0-[RP('f',0,ER)]),lhs=[],sp=2,np=3,len=0} --> GNI{state=State(8/0-[RP(S,0,2)]),lhs=[<EOT>],sp=0,np=2,len=2} --> GNI{state=State(0/0-[RP(<GOAL>,0,SR)]),lhs=[<EOT>],sp=0,np=0,len=0}
Choices:
  Transition: State(9/0-[RP('f',0,ER)]) -- GRAFT[<RT>]() --> State(12/0-[RP(S,0,ER)]) {[RP(S,0,2)]}
For GNI{state=State(9/0-[RP('f',0,ER)]),lhs=[],sp=2,np=3,len=0}, taking: Transition: State(9/0-[RP('f',0,ER)]) -- GRAFT[<RT>]() --> State(12/0-[RP(S,0,ER)]) {[RP(S,0,2)]}

Internal error: should never happen
java.lang.IllegalStateException: Internal error: should never happen
	at net.akehurst.language.agl.runtime.graph.TreeData.setInGrowingParentChildAt(TreeData.kt:131)
	at net.akehurst.language.agl.runtime.graph.ParseGraph.addNewPreferredTreeData(ParseGraph.kt:329)
	at net.akehurst.language.agl.runtime.graph.ParseGraph.growNextChild(ParseGraph.kt:751)
	at net.akehurst.language.agl.parser.RuntimeParser.doGraft(RuntimeParser.kt:831)
	at net.akehurst.language.agl.parser.RuntimeParser.growComplete2(RuntimeParser.kt:353)
	at net.akehurst.language.agl.parser.RuntimeParser.growComplete(RuntimeParser.kt:294)
	at net.akehurst.language.agl.parser.RuntimeParser.growHead(RuntimeParser.kt:234)
	at net.akehurst.language.agl.parser.RuntimeParser.grow3(RuntimeParser.kt:208)
	at net.akehurst.language.agl.parser.ScanOnDemandParser.parseForGoal(ScanOnDemandParser.kt:65)
	at net.akehurst.language.parser.scanondemand.test_ScanOnDemandParserAbstract.test2(test_ScanOnDemandParserAbstract.kt:60)
	at net.akehurst.language.parser.scanondemand.test_ScanOnDemandParserAbstract.test(test_ScanOnDemandParserAbstract.kt:45)
	at net.akehurst.language.parser.scanondemand.test_ScanOnDemandParserAbstract.test(test_ScanOnDemandParserAbstract.kt:35)
	at net.akehurst.language.parser.scanondemand.choiceAmbiguous.test_e_acsOads_f.eaf(test_e_acsOads_f.kt:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:108)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:39)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

