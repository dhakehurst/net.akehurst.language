// Boolean Literal
//# Expressions::Expression
true
false
yes
no

// Int Literal
//# Expressions::Expression
0
4
42

// Hex Literal
//# Expressions::Expression
0xFFB5C5
0XFFB5C5

// Binary Literal
//# Expressions::Expression
0b1101101
0B1110001

// Real Literal
//# Expressions::Expression
0.2f
0.2F
0.2d
0.2D

// String Literal
//# Expressions::Expression
'Hello World'
"Hello World"
''

// Null Literal
//# Expressions::Expression
null

//FeatureCall
//# Expressions::Expression
a.b
a.b()
a.b(c)
a.b(c,c)
b(c)
b(c,d)
b[1]
b[1][2]
a.b[1]
a.b[1][2]

//Logical Expression
//# Expressions::Expression
! true
true || false
true && false
! yes
no && yes
true || no

//Assignment Expression
//# Expressions::Expression


// Variable Definition
//# Global::MemberDeclaration
var MyVar : integer
var MyVar : integer = 97
var readonly MyVar : integer
var MyVar : integer = 3 * 3
var MyVar : string = null

// Event Definition
//# Global::MemberDeclaration
event event1
event event1 : integer
event event1 : boolean
in event event1 : integer
out event event1 : integer
event event1 : integer
event event1 : string

//Operation Definition
//# Global::MemberDeclaration
operation myOpp()
operation myOpp() : boolean
operation myOpp(param1: integer)
operation myOpp(param1 : boolean) : integer
operation myOpp(param1 : boolean, param2 : real) : integer
operation myOpp(param1 : real, param2 : real) : integer

//# Transitions::ReactionTrigger
after 10 s
after 10 ms
after 10 us
after 10 ns
every 10 ns
entry
exit
oncycle
always
intEvent, after 10s
intEvent, after 10s, every 10 ms
intEvent, after 10s [false == true]
intEvent, after 10s ['' != null]
intEvent, after 10s [5  > 10]
ABC.intEvent

//# Transitions::DefaultTrigger
default
else

//# Transitions::ReactionEffect
raise intEvent
intVar = 5
voidOp()
intVar = intOp()
raise ABC.intEvent : 5
ABC.paramOp()
ABC.paramOp(5,false)
ABC.paramOp(null)

//# Transitions::ReactionEffectList
ABC.paramOp(); raise ABC.voidEvent

// Reaction Properties
//# Transitions::TransitionReaction
# > EntryPoint
# ExitPoint >

// Local Reaction
//# States::LocalReaction
entry [ABC.intVar > 10] / raise ABC.intEvent

//# Transitions::TransitionReaction
after 10 s / raise ABC.intEvent

//# Global::Interface
interface :
interface ABC:
interface : in event Event1
interface ABC : var myVar : integer
interface : operation myOpp()

//# Global::InternalDeclarations
internal :
internal : event voidEvent
internal : var intVar : integer
internal : operation voidOp()
internal : every 10 ms / raise intEvent

//# Global::Interface
interface: in event namespace
interface: in event interface
interface: in event internal
interface: in event import
interface: in event event
interface: in event local
interface: in event in
interface: in event out
interface: in event const
interface: in event var
interface: in event readonly
interface: in event operation
interface: in event default
interface: in event else
interface: in event raise
interface: in event valueof
interface: in event active



